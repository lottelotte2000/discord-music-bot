const { Client, GatewayIntentBits, EmbedBuilder } = require('discord.js');
const { Player } = require('discord-player');

// ‡πÉ‡∏ä‡πâ token ‡∏à‡∏≤‡∏Å Environment Variables
const token = process.env.TOKEN;

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Discord client
const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildVoiceStates,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
  ],
});

// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Player
const player = new Player(client);

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Player ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
player.events.on('playerStart', (queue, track) => {
  const channel = queue.metadata.channel;
  channel.send(`üéµ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á: **${track.title}**`);
});

// ‡πÄ‡∏°‡∏∑‡πà‡∏≠ Bot ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
client.once('ready', () => {
  console.log(`Logged in as ${client.user.tag}`);
});

// ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ
client.on('messageCreate', async (message) => {
  if (message.author.bot || !message.guild) return;

  const prefix = '!'; // ‡∏Ñ‡∏≥‡∏ô‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á ‡πÄ‡∏ä‡πà‡∏ô !play

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ prefix ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (!message.content.startsWith(prefix)) return;

  const args = message.content.slice(prefix.length).trim().split(/ +/);
  const command = args.shift().toLowerCase();

  // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á !play [URL ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏•‡∏á]
  if (command === 'play') {
    if (!args[0]) return message.reply('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠ URL');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const voiceChannel = message.member.voice.channel;
    if (!voiceChannel) {
      return message.reply('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ');
    }

    try {
      const { track } = await player.play(voiceChannel, args.join(' '), {
        nodeOptions: {
          metadata: {
            channel: message.channel,
          }
        }
      });

      const embed = new EmbedBuilder()
        .setTitle('‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß')
        .setDescription(`**${track.title}**`)
        .setThumbnail(track.thumbnail)
        .addFields(
          { name: '‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤', value: track.duration, inline: true },
          { name: '‡∏Ç‡∏≠‡πÇ‡∏î‡∏¢', value: `${message.author}`, inline: true }
        )
        .setColor('#00FF00');

      return message.reply({ embeds: [embed] });
    } catch (error) {
      console.error(error);
      return message.reply('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á');
    }
  }

  // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á !skip
  if (command === 'skip') {
    const queue = player.nodes.get(message.guild.id);
    if (!queue) return message.reply('‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà');

    queue.node.skip();
    return message.reply('‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß');
  }

  // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á !stop
  if (command === 'stop') {
    const queue = player.nodes.get(message.guild.id);
    if (!queue) return message.reply('‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà');

    queue.delete();
    return message.reply('‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß');
  }

  // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡∏Ñ‡∏¥‡∏ß !queue
  if (command === 'queue') {
    const queue = player.nodes.get(message.guild.id);
    if (!queue || !queue.node.isPlaying()) return message.reply('‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà');

    const currentTrack = queue.currentTrack;
    const tracks = queue.tracks.data;

    const embed = new EmbedBuilder()
      .setTitle('‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á')
      .setDescription(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô: **${currentTrack.title}**\n\n${
        tracks.length ? 
        tracks.map((track, i) => `${i + 1}. **${track.title}**`).join('\n') : 
        '‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß'
      }`)
      .setColor('#00FF00');

    return message.reply({ embeds: [embed] });
  }
});

// ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢ token ‡∏à‡∏≤‡∏Å Environment Variables
client.login(token);